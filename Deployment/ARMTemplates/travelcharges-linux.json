{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "applicationName": {
      "type": "string",
      "metadata": {
        "description": "This is the application name"
      }
    },
    "environment": {
      "type": "string",
      "defaultValue": "dev",
      "metadata": {
        "description": "Environment type"
      }
    },
    "nodeEnv": {
      "type": "string",
      "defaultValue": "development",
      "metadata": {
        "description": "Node environment value for docker images"
      }
    },
    "productName": {
      "type": "string",
      "metadata": {
        "description": "Product Name"
      }
    },
    "team": {
      "type": "string",
      "metadata": {
        "description": "Team name"
      }
    },
    "state": {
      "type": "string",
      "defaultValue": "Live",
      "metadata": {
        "description": "Default startup state"
      }
    },
    "skuName": {
      "type": "string",
      "defaultValue": "S1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and capacity. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "numberOfWorkers": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of Workers for web server farm"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "westus2",
      "metadata": {
        "description": "the location of the resource you need to deploy to."
      }
    },
	"FlyAdminAPIResourceGroup": {
		"type": "string"
	},
	"FlyAdminAPIlogAnalyticsName": {
		"type": "string"
	},
	"applicationType": {
		"type": "String",
		"defaultValue": "web"
	},
	"requestSource": {
		"type": "String",
		"defaultValue": "IbizaAIExtension",
		"allowedValues": [
			"IbizaAIExtension",
			"rest"
		],
		"metadata": {
			"description": "Describes what tool created this Application Insights component. Customers using this API should set this to the default 'rest'."
		}
	},
	"FlowType": {
		"type": "string",
		"defaultValue": "Redfield",
		"allowedValues": [
			"Redfield",
			"Bluefield"
		],
		"metadata": {
			"description": "Used by the Application Insights system to determine what kind of flow this component was created by. This is to be set to 'Bluefield' when creating/updating a component via the REST API. - Bluefield"
		}
	},
	"newOrExisting": {
		"type": "string",
		"defaultValue": "existing",
		"allowedValues": ["new", "existing"]
	},
	"retentionInDays": {
		  "type": "int",
		  "defaultValue": 30,
		  "minValue": 30,
		  "maxValue": 730
	},
    "teamEmails": {
      "minLength": 1,
      "type": "array",
      "metadata": {
        "description": "The email used to send alerts to."
      }
    },
    "containerSASToken": {
      "type": "secureString",
      "defaultValue": "?sv=2018-03-28&ss=b&srt=sco&sp=rla&se=2025-03-29T06:44:42Z&st=2019-03-28T22:44:42Z&spr=https&sig=nDt%2BeRefbyMtSA4I6LS%2F8wLUXR2%2BIc0fHelkUjU8eUg%3D"
    },
    "websiteTimezone": {
      "type": "string",
      "defaultValue": "Pacific Standard Time"
    },
    "pm-ssl-customHostname": {
      "type": "string",
      "metadata": {
        "description": "The custom hostname that you wish to add."
      }
    },
    "pm-ssl-existingKeyVaultId": {
      "type": "securestring",
      "metadata": {
        "description": "Existing Key Vault resource Id with an access policy to allow Microsoft.Web RP to read Key Vault secrets (Checkout README.md for more information)"
      }
    },
    "pm-ssl-existingKeyVaultSecretName": {
      "type": "securestring",
      "metadata": {
        "description": "Key Vault Secret that contains a PFX certificate"
      }
    },
    "buildHostBinding": {
      "type": "string",
      "defaultValue": "true",
      "metadata": {
        "description": "Build Host Binding"
      }
    },
    "enableAutoScale": {
      "type": "string",
      "defaultValue": "true",
      "metadata": {
        "description": "Enable Auto scaling in environment"
      }
    },
    "modificationDate": {
      "type": "string",
      "defaultValue": "[utcNow()]",
      "metadata": {
        "description": "Set last modified date tag"
      }
    }
  },
  "variables": {
    "webAppName": "[concat(parameters('applicationName'),'-', parameters('environment'),'-site-',parameters('location'))]",
    "certificateName": "[replace(variables('webAppName'),'-site-', '-cert-')]",
    "componentName": "[concat(parameters('applicationName'),'-', parameters('environment'),'-appinsights')]",
    "webAppServiceId": "[resourceId('Microsoft.Web/sites', variables('webAppName'))]",
    "AppServicePlanName": "[toLower(concat('nrt-flyadmin','-', parameters('environment'),'-plan-',parameters('location')))]",
    "AppServicePlanId": "[resourceId('Microsoft.Web/serverfarms', variables('AppServicePlanName'))]",
    "templateBaseUrl": "https://linkedarmtemplateprod01.blob.core.windows.net/armtemplates/",
    "modernAlertsTemplateUrl": "[concat(variables('templateBaseUrl'), 'ModernAlertsARMTemplate.json')]",
    "autoscaleTemplateUrl": "[concat(variables('templateBaseUrl'), 'AutoScaleARMTemplate.json')]"
  },
  "resources": [
    {
      "apiVersion": "2016-09-01",
      "name": "[variables('AppServicePlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "HostingPlan",
        "ApplicationName": "[parameters('applicationName')]",
        "Environment": "[parameters('environment')]",
        "ProductName": "[parameters('productName')]",
        "Team": "[parameters('team')]",
        "Contact": "[parameters('teamEmails')[0].emailAddress]",
        "State": "[parameters('state')]",
        "ModifiedDate": "[parameters('modificationDate')]"
      },
      "properties": {
        "name": "[variables('AppServicePlanName')]",
        "workerSizeId": "1",
        "reserved": true,
        "numberOfWorkers": "[parameters('numberOfWorkers')]",
        "hostingEnvironment": ""
      },
      "sku": {
        "Tier": "Standard",
        "Name": "[parameters('skuName')]"
      },
      "kind": "linux"
    },
    {
      "apiVersion": "2015-08-01",
      "name": "[variables('webAppName')]",
      "type": "Microsoft.Web/sites",
      "kind": "app,linux,container",
      "location": "[parameters('location')]",
      "tags": {
        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('AppServicePlanName'))]": "Resource",
        "displayName": "Website",
        "ApplicationName": "[parameters('applicationName')]",
        "Environment": "[parameters('environment')]",
        "ProductName": "[parameters('productName')]",
        "Team": "[parameters('team')]",
        "Contact": "[parameters('teamEmails')[0].emailAddress]",
        "State": "[parameters('state')]",
        "Deployment": "Linux",
        "ModifiedDate": "[parameters('modificationDate')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('AppServicePlanName'))]",
        "[resourceId('Microsoft.Insights/components', variables('componentName'))]"
      ],
      "properties": {
        "name": "[variables('webAppName')]",
        "httpsOnly": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('AppServicePlanName'))]",
        "siteConfig": {
          "DOCKER_CUSTOM_IMAGE_NAME": "blazor-master",
          "appSettings": [
            {
              "name": "InstrumentionKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('componentName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "NODE_ENV",
              "value": "[parameters('nodeEnv')]"
            }
          ]
        }
      },
      "resources": [
        {
          "condition": "[or(equals(parameters('environment'),'qa'), equals(parameters('environment'),'prod'))]",
          "apiVersion": "2015-08-01",
          "name": "Staging",
          "type": "slots",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('webAppName'))]"
          ],
          "properties": {},
          "resources": []
        }
      ]
    },
    {
      "name": "[variables('componentName')]",
      "type": "Microsoft.Insights/components",
      "location": "[parameters('location')]",
      "apiVersion": "2020-02-02",
      "dependsOn": [],
      "tags": {
        "ApplicationName": "[parameters('applicationName')]",
        "Environment": "[parameters('environment')]",
        "ProductName": "[parameters('productName')]",
        "Team": "[parameters('team')]",
        "Contact": "[parameters('teamEmails')[0].emailAddress]",
        "State": "[parameters('state')]"
      },
      "properties": {
        "applicationId": "[resourceId('Microsoft.Web/sites', variables('webAppName'))]",
		"Application_Type": "[parameters('applicationType')]",
		"Flow_Type": "[parameters('FlowType')]",
		"Request_Source": "[parameters('requestSource')]",
		"retentionInDays": "[parameters('retentionInDays')]",
		 "WorkspaceResourceId": "[if(equals(parameters('newOrExisting'), 'new'), resourceId('Microsoft.OperationalInsights/workspaces', parameters('FlyAdminAPIlogAnalyticsName')), extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('FlyAdminAPIResourceGroup')), 'Microsoft.OperationalInsights/workspaces', parameters('FlyAdminAPIlogAnalyticsName')))]"
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "name": "[concat('ModernAlertsLinkedTemplate-',variables('webAppName'))]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('ModernAlertsTemplateUrl'),parameters('containerSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "teamEmails": {
            "value": "[parameters('teamEmails')]"
          },
          "ApplicationName": {
            "value": "[parameters('applicationName')]"
          },
          "Environment": {
            "value": "[parameters('environment')]"
          },
          "Location": {
            "value": "[parameters('location')]"
          },
          "AppServiceId": {
            "value": "[variables('webAppServiceId')]"
          },
          "AppServicePlanId": {
            "value": "[variables('AppServicePlanId')]"
          },
          "AppServicePlanName": {
            "value": "[variables('AppServicePlanName')]"
          }
        }
      },
      "dependsOn": [
        "[variables('AppServicePlanId')]",
        "[variables('webAppServiceId')]"
      ]
    },
    {
      "condition": "[equals(parameters('enableAutoScale'),'true')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "name": "[concat('AutoScaleLinkedTemplate-',variables('webAppName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('webAppName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('AutoScaleTemplateUrl'),parameters('containerSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "teamEmails": {
            "value": "[parameters('teamEmails')[0].emailAddress]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "AppServicePlanId": {
            "value": "[variables('AppServicePlanId')]"
          },
          "AppServicePlanName": {
            "value": "[variables('AppServicePlanName')]"
          }
        }
      }
    }
  ],
  "outputs": {}
}